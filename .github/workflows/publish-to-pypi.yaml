name: Publish Python Package to PyPi
on: push

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.7.0

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}


  # build-n-publish:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@master@v3
  #     - name: Set up Python 3.8
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: 3.8
  #     - name: Install pypa/build
  #       run: |
  #         python -m pip install build --user
  #     - name: Build a binary wheel and a source tarball
  #       run: |
  #         python -m build --sdist --outdir dist/ .
  #     - name: Publish distribution to PyPI
  #       if: startsWith(github.ref, 'refs/tags')
  #       uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         password: ${{ secrets.PYPI_API_TOKEN }}
